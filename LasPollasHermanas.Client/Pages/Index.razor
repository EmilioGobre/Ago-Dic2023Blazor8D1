@page "/dildos/{puesto:int}/{id:int}"
@using Models;
@using Data;
@inject NavigationManager NavigationManager
@inject DildoClient client
<h1>Las Pollas Hermanas Catalog</h1>
@if (dildos is null)
{
    <p>Loading ...</p>
}
else
{
    <DeleteDildo dildo="@currentDildo" OnClose="@OnDeleteModalCloseAsync">
    </DeleteDildo>
    <div class="row mb-4">
        <div class="col-sm-6">
            <button type="button" class="btn btn-primary" @onclick="CreateDildo">New Dildo</button>
        </div>
    </div>
    <table class="table table-striped table-bordered table-hover">
    <thead class="table-dark">
        <th>Id</th>
        <th>Name</th>
        <th>Price</th>
        <th>Size</th>
        <th>Expire Date</th>
        <th>Material</th>
        <th>Color</th>
        <th>Stock</th>
        <th></th>
        <th></th>
    </thead>
    <tbody>
        @foreach (var dildo in dildos)
{
    <tr>
        <td>@dildo.Id</td>
        <td>@dildo.Name</td>
        <td>@dildo.Price</td>
        <td>@dildo.Size</td>
        <td>@dildo.ExpireDate.ToString("MM/dd/yyyy")</td>
        <td>@dildo.Material</td>
        <td>@dildo.Color</td>
        <td>@dildo.Stock</td>
        <td>
            @if (puesto == 1)
            {
                <button class="btn btn-primary" @onclick="(() => EditDildo(dildo.Id))">
                    <i class="oi oi-pencil"></i>
                </button>
                <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal"
                    @onclick="(() => currentDildo = dildo)">
                    <i class="oi oi-x"></i>
                </button>
            }
            else if (puesto == 2)
            {
                <button class="btn btn-success" @onclick="(() => BuyDildo(dildo.Id))">
                    Buy
                </button>
            }
        </td>
    </tr>
}
        </tbody>
    </table>
}

@code
{
    [Parameter]
    public int puesto { get; set; }
    private Dildo[]? dildos;
    private Dildo? currentDildo;
    protected override async Task OnInitializedAsync()
    {
        dildos = await client.GetDildosAsync();
    }

    private void CreateDildo()
    {
        NavigationManager.NavigateTo("dildo");
    }

    private void EditDildo(int id)
    {
        NavigationManager.NavigateTo($"/dildo/{id}");
    }
    private void BuyDildo(int id)
    {
      // Cuando se compra un dildo, se resta uno al stock
    }

    private async Task OnDeleteModalCloseAsync(bool accepted)
    {
        if (accepted)
        {
            await client.DeleteDildoAsync(currentDildo!.Id);
            dildos = await client.GetDildosAsync();
        }
    }
}