@page "/"
@using Models;
@using Data;
@inject NavigationManager NavigationManager
@inject UserClient client

<h1 class="text-center">Bienvenido a Las Pollas Hermanas</h1>

<div class="d-flex justify-content-center">
  <EditForm Model="@user" OnValidSubmit="Ingresar">
    <div class="form-group" style="max-width: 300px;">
      <InputText @bind-Value="correo" placeholder="Correo" class="form-control mb-3" style="width: 100%" />
      <ValidationMessage For="@(() => user.Email)" />

      <InputText type="password" placeholder="ContraseÃ±a" @bind-Value="contrasena" class="form-control mb-3"
        style="width: 100%" />
      <ValidationMessage For="@(() => user.Password)" />

      <div class="row justify-content-center">
        <button type="submit" class="btn btn-info" style="color: white;">
          Ingresar
        </button>
      </div>

      <div class="row justify-content-center">
        <a href="/Registro" style="display: block; text-align: center;">Registrarme</a>
      </div>
    </div>
  </EditForm>
</div>

@code {
  private Users user = new Users();
  private string? correo;
  private string? contrasena;

  private async Task Ingresar()
  {
    var users = await client.GetUsersAsync();
    var user = users.FirstOrDefault(u => u.Email == correo);

    if (user != null && user.Password == contrasena)

    {
      NavigationManager.NavigateTo($"/dildos/{user.Puesto}/{user.idUser}");
    }
    else
    {
      Console.WriteLine("Credenciales incorrectas.");
    }
  }
}
