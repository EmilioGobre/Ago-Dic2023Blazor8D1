@page "/Registro"
@using Models;
@using Data;
@inject NavigationManager NavigationManager
@inject UserClient client

<h1 class="text-center">Registro en Las Pollas Hermanas</h1>

@if (!string.IsNullOrEmpty(mensaje))

{
  <div class="alert alert-warning">
    @mensaje
  </div>
}

<div class="container">
  <div class="row justify-content-center">
    <div class="col-sm-3">
      <EditForm Model="@user" OnValidSubmit="RegistrarUsuario">
        <div class="mb-3">
          <InputText @bind-Value="user.Name" id="name" class="form-control" placeholder="Nombre" />
          <ValidationMessage For="@(() => user.Name)" />
        </div>

        <div class="mb-3">
          <InputText @bind-Value="user.Sername" id="surname" class="form-control" placeholder="Apellido" />
          <ValidationMessage For="@(() => user.Sername)" TValue="string" />
        </div>

        <div class="mb-3">
          <InputText @bind-Value="user.Email" id="email" class="form-control" placeholder="Correo" />
          <ValidationMessage For="@(() => user.Email)" />
        </div>

        <div class="mb-3">
          <InputText @bind-Value="user.Password" id="password" class="form-control" placeholder="Contraseña" />
          <ValidationMessage For="@(() => user.Password)" />
        </div>

        <div class="mb-3">
          <label for="position" class="form-label">Puesto</label>
          <InputNumber @bind-Value="user.Puesto" id="position" class="form-control" placeholder="Puesto" />
          <ValidationMessage For="@(() => user.Puesto)" />
        </div>

        <div class="mb-3">
          <label for="birthdate" class="form-label">Fecha de Nacimiento</label>
          <InputDate @bind-Value="user.fechaNacimiento" id="birthdate" class="form-control"
            placeholder="Fecha de Nacimiento" />
          <ValidationMessage For="@(() => user.fechaNacimiento)" />
        </div>

        <div class="mb-3 text-center">
          <button type="submit" class="btn btn-info">Registrarme</button>
        </div>
        <p class="text-center">¿Ya estás registrado? <a href="/">Iniciar sesión</a></p>
      </EditForm>
    </div>
  </div>
</div>

@code {
  private Users user = new Users();

  private string mensaje;



  private async Task RegistrarUsuario()

  {

    var users = await client.GetUsersAsync();

    bool correoDuplicado = users.Any(u => u.Email == user.Email);



    if (correoDuplicado)

    {

      mensaje = "El correo ya está registrado. Por favor, utilice un correo diferente.";

    }

    else

    {

      // El correo no está duplicado, proceder con el registro.

      await client.AddUserAsync(user);

      mensaje = "¡Registro exitoso!";

      NavigationManager.NavigateTo("/");

    }

  }
}
